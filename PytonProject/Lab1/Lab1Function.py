"""
Спасатель должен добраться до утопающего как можно быстрее. Необходимо преодолеть часть дистанции
по песку, а оставшуюся часть — вплавь. Направление движения определяет общее расстояние, которое
необходимо преодолеть. Скорость движения в воде меньше скорости движения по суше на определённую
постоянную величину. Необходимо написать программу, рассчитывающую время,которое требуется спасателю
для того, чтобы добраться до утопающего.
"""

import math

# Константы для перевода величин друг в друга
J_T_F = 3  # "Jard to foot" - в одном ярде три фута
MH_T_FS = 5280  # "Mills/hour to Foots/sec" - в одном ярде три фута

# Ввести данные для расчета (вручную через консоль или программно через код)
d1 = 8
# d2 = int(input("Введите кратчайшее расстояние от утопающего до берега, d2 (футы)"))
d2 = 10
# h = int(input("Введите боковое смещение между спасателем и утопающим, h (ярды)"))
h = 50
# v_sand = int(input("Введите скорость движения спасателя по песку, v_sand (мили в час)"))
v_sand = 5
# n = int(input("Введите коэффициент замедления спасателя при движении в воде, n"))
n = 2
# θ = float(input("Введите направление движения спасателя по песку, θ (градусы)"))
θ = 39.413


# Объявление функции с возвращаемыми параметрами и с округлением до одного знака
def time(d1, d2, h, J_T_F, MH_T_FS, v_sand, n, θ):
    return round(1 / (v_sand * MH_T_FS / (60 * 60)) * (
            (((d1 * J_T_F) ** 2 + (d1 * J_T_F * (math.tan(math.pi * θ / 180))) ** 2) ** 0.5) + n * (
            ((h * J_T_F - (d1 * J_T_F * (math.tan(math.pi * θ / 180)))) ** 2 + d2 ** 2) ** 0.5)), 1)


# Вызов функции
time = time(d1, d2, h, J_T_F, MH_T_FS, v_sand, n, θ)

# Определение необходимого времени t, (секунды)
print("")  # пробел
print("Если спасатель начнёт движение под углом θ =", θ, "градусов, он достигнет утопащего через", time, "секунд.")
